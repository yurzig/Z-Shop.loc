<?phpnamespace App\ServicesYz;use App\Models\Blog\Category;use App\Models\Blog\Post;use Illuminate\Http\RedirectResponse;use Illuminate\Http\Request;use Illuminate\Support\Facades\Validator;use Illuminate\Support\Str;class PostsService{    /**     * Получить список постов     */    public function getAll(?int $perPage = null): object    {        $filter = session('posts_filter', []);        $sort = session('posts_sort', ['id', 'asc']);        $where = [];        if($filter) {            foreach ($filter['val'] as $key => $item) {                if ($item) {                    $where[] = [$key, $filter['op'][$key], $filter['op'][$key] === 'like' ? "%$item%" : $item];                }            }        }        $result = Post::where($where)//            ->with(['parentCategory:id,title',])            ->orderBy($sort[0], $sort[1])            ->paginate($perPage);        return $result;    }    /**        Сохранение поста     */    public function store(Request $request): RedirectResponse    {        $data = $request->input();        $this->saveValidate($data);        $post = (new Post())->create($data);        if (!$post) {            return back()->withErrors(['msg' => 'Ошибка сохранения'])->withInput();        }        return to_route('admin.blog.posts.edit', $post)->with(['success' => 'Успешно сохранено']);    }//    /**//        Обновить категорию поста//     *///    public function update(Request $request, Category $category):RedirectResponse//    {//        if (empty($category)) {////            return back()//                ->withErrors(['msg' => "Запись id=[{$category->id}] не найдена"])//                ->withInput();//        }////        $data = $request->all();////        $this->saveValidate($data);////        $result = $category->update($data);////        if (!$result) {////            return back()->withErrors(['msg' => 'Ошибка сохранения'])->withInput();//        }////        return to_route('admin.blog.categories.edit', $category)->with(['success' => 'Успешно сохранено']);//    }////    /**//        Удалить категорию поста//     *///    public function delete (Category $category): RedirectResponse//    {////        $result = $category->delete();////        if ($result) {////            return redirect()//                ->route('admin.blog.categories.index')//                ->with(['success' => "Удалена запись id[$category->id] - $category->title"]);//        }////        return back()->withErrors(['msg' => 'Ошибка удаления']);//    }///**//        Проверка перед удалением категории поста//     */////    public function beforeDelete( Post $post_category ): void////    {////        if (count(posts()->getByCategoryId( $post_category )) > 0)////////            abort(403, ' Удаление невозможно. У этой категории есть посты');////////////    }//    /**        Валидация     */    public function saveValidate( array $data ): void    {        Validator::make( $data, [            'category_id' => 'required|integer|exists:blog_categories,id',            'user_id' => 'required|integer|exists:users,id',            'title' => 'required|min:3|max:200',            'slug' => 'max:200',            'excerpt' => 'max:200',            'content' => 'required|max:10000',        ])->validate();    }//    /**//     * Если поле слаг пустое, то заполняем его конвертацией заголовка//     *///    public function setSlug(Category $category): String//    {//        if (!empty($category->slug)) {////            return $category->slug;//        }////        $slug = Str::slug($category->title);//        $slug_new = $slug;////        $i = 0;//        while (Category::where('slug', $slug_new)->get()->count() > 0) {//            $slug_new = $slug . '_' . ++$i;//        }////        return $slug_new;//    }}